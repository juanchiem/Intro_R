{
  "hash": "5afea06296a23594af260ad1156c4b1f",
  "result": {
    "markdown": "\n\n\n# Visualización\n\n## ggplot {.unnumbered}\n\nEl paquete ggplot2 tiene una flexibilidad tal que permite generar rápidamente gráficos exploratorios así como crear figuras complejas, de alta calidad (con fines de publicaciones científicas, por ej).\n\nTiene una gramática propia: **\"suma de capas\"**\n\n![](fig_2/capas.png){width=\"400px\"}\n\n-   Salvo la primera (que debe ser `ggplot()`), las capas no tienen un orden estricto\n\n-   Las capas se van agregando con un símbolo `+`\n\n-   Un mismo gráfico acepta tomar información de distintos datasets\n\nLas capas básicas son:\n\n-   data `ggplot`: inicializa un objeto gráfico de `ggplot`\n\n-   aesthetics `aes`: \"Algo que se puede ver\" Dentro de la capa `aes` debemos indicar que a que variable se atribuyen los diferentes atributos:\n\n    -   mapeo de variables (ejes `x` e `y`)\n    -   color exterior de los objetos o de las líneas (`col`)\n    -   color de relleno (`fill`)\n    -   forma de los puntos (`shape`)\n    -   tipo de línea (`linetype`)\n    -   tamaño de los puntos (`size`)\n\n-   geometrías`geom_`: formas geométricas para representar las observaciones (dan el nombre al tipo de gráfico: gráfico de dispersión, boxplot, histograma, etc...)\n\n    -   geom_point()\n    -   geom_smooth()\n    -   geom_boxplot()\n    -   [lista de \"geoms\"](https://ggplot2.tidyverse.org/reference/#section-layer-geoms)\\\n\n-   facetas`facet_`: \"paneles de compartimentalización\" de un mismo gráfico\n\n    -   facet_wrap(): paneles contiguos\n    -   facets_grid(): paneles tipo grilla\n\nEjemplo de visualización con `iris`\n\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-2_73df2f25c6d6d875e6b6ad9427b616b3'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\nTambién necesitaremos:\n\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-3_cce11c4d867d0dd298c2070e999d5521'}\n\n```{.r .cell-code}\npacman::p_load(Hmisc,     # para cálculos dentro de los mismas capas \n               patchwork  # ensamblar multiples graficos\n               )\n```\n:::\n\n\n## Ambas variables contínuas\n\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-4_7019f42b450345fa2f23fa0e3015ba53'}\n\n```{.r .cell-code}\niris %>% \n  ggplot() +\n  aes(x = Sepal.Length, y = Petal.Length)\n\n# también podán encontrar\n# ggplot(iris, aes(x = Sepal.Length, y = Petal.Length))\n```\n:::\n\n\n### geoms\n\nObjetos geométricos. Son la representación visual de las observaciones. En general los que le dan el nombre al tipo de gráfico. La [lista de \"geoms\"](https://ggplot2.tidyverse.org/reference/#section-layer-geoms) aumenta día a día.\n\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-5_ea4ac689f85075606f94ab7a50862606'}\n\n```{.r .cell-code}\niris %>% \n  ggplot() +\n  aes(x = Sepal.Length, y = Petal.Length)+\n  geom_point()\n```\n:::\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-6_9017ffafdebce99c8a3df2aa6a69e508'}\n\n```{.r .cell-code}\niris %>% \n  ggplot() +\n  aes(x = Sepal.Length, y = Petal.Length)+\n  geom_point(aes(color = Species))\n```\n:::\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-7_c69a0474c690fe1258e6602f79ba2ad8'}\n\n```{.r .cell-code}\niris %>% \n  ggplot() +\n  aes(x = Sepal.Length, y = Petal.Length)+\n  geom_point(aes(color = Species))+ \n  geom_smooth()\n```\n:::\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-8_8109873c8eee56cf0c0ca94b014c1652'}\n\n```{.r .cell-code}\niris %>% \n  ggplot() +\n  aes(x = Sepal.Length, y = Petal.Length)+\n  geom_point()+\n  geom_smooth()\n```\n:::\n\n\n### facets\n\nLas facetas o \"facets\" permiten dividir el mismo gráfico en múltiples paneles asociados a los niveles de un factor.\n\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-9_f2cd8e0c14eb27f5d8a5ff6f4c5c473e'}\n\n```{.r .cell-code}\niris %>% \n  ggplot() +\n  aes(x = Sepal.Length, y = Petal.Length)+\n  geom_point()+\n  geom_smooth(method = \"lm\")+\n  facet_wrap(~Species)\n```\n:::\n\n\n### theme\n\nLos temas (theme) son un conjunto de opciones predefinidas sobre la apariencia de los objetos en ggplot. El tema por defecto del ggplot dibuja el gráfico sobre un fondo gris. Podemos cambiarlo a blanco y negro añadiendo el comando theme_bw().\n\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-10_bdc1ffe8623473bed88326c568701394'}\n\n```{.r .cell-code}\nggplot(iris) +\n  aes(x = Sepal.Length, y = Petal.Length)+\n  geom_point()+\n  geom_smooth(method = \"lm\")+\n  facet_wrap(~Species) + \n  theme_bw()\n```\n:::\n\n\n### ggsave\n\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-11_469cbad951222f6c768d1c792f7b913d'}\n\n```{.r .cell-code}\nggsave(last_plot(), file=\"plots/iris_smooth.tiff\", \n       w=80, h=60, units=\"mm\", dpi=300)\n```\n:::\n\n\n## Variable continua vs factor\n\nLos gráficos de barra, ampliamente usados en publicaciones científicas, son cada vez más criticados por \"ocultar\" la naturaleza de las observaciones @doi:10.1111/j.1476-5381.2011.01251.x; @10.1371/journal.pbio.1002128\n\n![Many different datasets can lead to the same bar graph](fig_2/plos_bars.png){fig-alt=\"@10.1111/j.1476-5381.2011.01251.x\"}\n\nA continuación presentamos algunas opciones gráficas que surgen de la combinación de medidas de posición y de dispersión.\n\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-12_3172b49e66fefe67eb4dc9c8181fbecb'}\n\n```{.r .cell-code}\n# Aprovechamos para customizar el `theme` a nuestro gusto y agregar algunos detalles:\np0 <- iris %>% \n  ggplot() +\n  aes(x = Species, y = Petal.Length)+\n  labs(x = \"Iris species\", y =\"Sepal length (cm)\") + \n  theme_light(base_size = 10)\np0\n```\n:::\n\n\n### Observaciones + media / mediana\n\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-13_ab64b667f45bc1cb11635240e5427058'}\n\n```{.r .cell-code}\np1 <- p0 + \n  geom_point(shape = 1, alpha=0.2)+\n  stat_summary(fun= mean,  #median\n               fun.min= mean,\n               fun.max = mean,\n               geom = \"point\", \n               size = 2)+\n  labs(title=\"Observaciones (points) & media\")\np1\n```\n:::\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-14_8c5d55fdbf5b996cdde4cee017ef4e9c'}\n\n```{.r .cell-code}\np2 <- p0 + \n  geom_jitter(width = 0.2, alpha=0.2)+\n  stat_summary(fun = mean,  #median\n               fun.min= mean,\n               fun.max = mean,\n               geom = \"crossbar\", \n               size = 0.5)+\n  labs(title=\"Observaciones (jitter) & media\")\np2\n```\n:::\n\n\n### Barplot + SE\n\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-15_cc0c766724ff8e73b97b169835407e6a'}\n\n```{.r .cell-code}\np3 <-p0 + \n  stat_summary(fun=mean, position=position_dodge(width=0.95),geom=\"bar\",\n               colour=\"black\",fill=\"grey90\")+\n  stat_summary(fun.data=mean_cl_normal, geom=\"errorbar\", width=0.2) + \n  labs(title=\"Barplot & SEM\")\np3\n```\n:::\n\n\n### Box-plot\n\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-16_f9b0d1f92b80cf4dd61219398c66b329'}\n\n```{.r .cell-code}\np4 <-p0 + \n  geom_boxplot(fill = \"grey90\") +\n  labs(title=\"Boxplot & mean\") \np4\n```\n:::\n\n\n### Violin plot\n\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-17_ea27b4e3bca655075de3c611f90c1af9'}\n\n```{.r .cell-code}\np5 <-p0 + \n  geom_violin(trim=FALSE,fill = \"grey90\")+\n  labs(title=\"Violin plot\")\np5 \n```\n:::\n\n\n### Media & dispersión\n\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-18_67b8b2900efe00a8409ca3cd2cc5e4d7'}\n\n```{.r .cell-code}\np6 <- p0 + \n  stat_summary(fun=\"mean\", geom=\"point\", size=2)+\n  stat_summary(fun.data = mean_se, geom = \"errorbar\", width=0.2)+\n  stat_summary(fun.data= mean_sdl, geom = \"errorbar\", color=\"red\", width=0.2)+\n  stat_summary(fun.data = mean_cl_boot, geom = \"errorbar\", color=\"blue\", width=0.2)+\n  labs(title=\"Media + SE (negro) / SD (rojo) / 95% CI (negro)\")\np6\n```\n:::\n\n\nAhora ensamblemos todos los gráficos creados con ayuda de [{patchwork}](https://patchwork.data-imaginist.com/index.html)\n\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-19_f552a0d88a70f05d3e16b5a07b806e14'}\n\n```{.r .cell-code}\nlibrary(patchwork)\nmultiplot <- (p1 + p2 + p3) / (p4 + p5 + p6)\n```\n:::\n\n\n::: callout-note\n## Challenge\n\nGuarden el gráfico ensamblado en la carpeta plots, llamado \"multiplot.jpg\", de manera tal que sea legible (para eso usen el atributo `scale=` dentro de la función ggsave , y el `base_size =` indicado en el grafico base \"p0\"\n\n\n::: {.cell hash='6-visualizar_cache/html/unnamed-chunk-20_0baf3b08b7d2c17e371802cf0233f9c7'}\n\n```{.r .cell-code}\nggsave(plot= , \n       file= , \n       w= , \n       h= , \n       units=\"mm\",\n       scale= , \n       dpi=300, \n       )\n```\n:::\n\n:::\n\n::: callout-note\n\n# Xtras\n\nLa gran comunidad de usuarios de R disponibiliza sus creaciones e incluso trabaja en extensiones que amplían la potencialidad de sus paquetes.\n\nSe podría afirmar que no hay límites para la creación. Digamos, que no importa el \"**¿cómo?**\" si no el \"**¿qué?**\"\n\nAlgunas pruebas de ello son los siguientes links:\n\n-   [The R Graph Gallery](https://www.r-graph-gallery.com/)\n-   [Top 50 plots](http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html)\n-   [Extensiones de ggplot](http://www.ggplot2-exts.org/gallery/)\n-   [Fundamentals of Data Visualization](https://serialmentor.com/dataviz/)\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}