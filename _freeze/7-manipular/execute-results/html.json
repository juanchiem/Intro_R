{
  "hash": "a1e210bc973a19be1ffadc3ad7fb917d",
  "result": {
    "markdown": "# Manipulación\n\nRecursos: \n\nCheatsheets https://github.com/rstudio/cheatsheets \n\n- dplyr https://nyu-cdsc.github.io/learningr/assets/data-transformation.pdf \n- tidyr https://github.com/rstudio/cheatsheets/blob/main/tidyr.pdf  \n- lubridate https://github.com/rstudio/cheatsheets/blob/main/lubridate.pdf \n- forcats https://github.com/rstudio/cheatsheets/blob/main/factors.pdf \n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-1_925575e082422617d8fce8d2d635bb9e'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-2_e0d95d80a828705e22fbcf148622399d'}\n\n```{.r .cell-code}\nconflicted::conflict_prefer(\"filter\", \"dplyr\")\nconflicted::conflict_prefer(\"select\", \"dplyr\")\n```\n:::\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-3_0522b406d5df828eb20d21a144399256'}\n\n```{.r .cell-code}\n# bce_met_raw <- rio::import(\"data/datos_curso.xls\", sheet =\"bce_met\")\n# bce_met_raw\n# bce_met_raw %>% rio::export(\"data/bce_met_raw.csv\")\nbce_met_raw <- rio::import(\"data/bce_met_raw.csv\")\nbce_met_raw\n```\n:::\n\n\n# dplyr\n\n## mutate()\n\n- Crear nueva columna en base a otras pre-existentes\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-4_38fd296075af8cf4ca50a15f406cd541'}\n\n```{.r .cell-code}\nbce_met <- bce_met_raw %>% \n  mutate(tmean = (tmax + tmin) / 2)\nbce_met\n```\n:::\n\nFecha como caracter no nos permitira usarla como una variable temporal aun...\n\nModificar variables (en este caso el tipo de dato)\n\n### lubridate\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-5_361b83c7cab8536235904afb28e8549a'}\n\n```{.r .cell-code}\n# library(lubridate)\nbce_met <- bce_met %>%  \n  mutate(fecha = dmy(fecha)) #paso de character a fecha!\nbce_met\n```\n:::\n\n\nExtraer información de columnas pre-existentes\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-6_21e60322b27cc1eee05dd730232c1f9b'}\n\n```{.r .cell-code}\nbce_met <- bce_met %>% \n  mutate(mes = month(fecha), \n         juliano = yday(fecha)) # note que acepta mas de una operacion por mutate()\nbce_met\n```\n:::\n\n\n\nCrear columna en base a condiciones simples\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-7_b9c923e3f4105b29ae7d718d562269a2'}\n\n```{.r .cell-code}\nbce_met <- bce_met %>% \n  mutate(helada_meteo = tmin<=0)\nbce_met\n#16\n```\n:::\n\n\nCrear columna en base a una condiciones múltiple\n\n### ifelse\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-8_82003f0f5e8cbdf0eeabb8a73b8df67f'}\n\n```{.r .cell-code}\nbce_met <- bce_met %>% \n  mutate(\n    helada_meteo = tmin<=0,\n    helada_agro = ifelse(tmin>0 & tmin<3, T, F)\n    # helada_agro2 = between(tmin, 0,3)\n    )\nbce_met\n```\n:::\n\n\n### case_when\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-9_14ed0b88ff5dcea80ba3f0caa405a522'}\n\n```{.r .cell-code}\nbce_met <- bce_met %>% \n  mutate(\n    ambiente = case_when(\n      tmean < 10  ~ \"fresco\", \n      tmean > 10 & tmean < 20  ~ \"templado\",\n      tmean > 20  ~ \"calido\")\n  )\nbce_met\n```\n:::\n\n\n### cumsum\n\nmuy util para cálculos como el de suma térmica\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-10_1a6d3e49be7367649f33f43ca511ee7a'}\n\n```{.r .cell-code}\nbce_met <- bce_met %>% \n  mutate(\n    grados_efectivos = ifelse(tmean>10, tmean-10, 0),\n    suma_termica = cumsum(grados_efectivos)\n  )\n# suma_termica = cumsum(ifelse(date>=\"2018-10-01\", grados_efectivos, 0)))\nbce_met\n```\n:::\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-11_5fe6e732ce638f80d4adef03f44a40b2'}\n\n```{.r .cell-code}\nbce_met <- bce_met %>% \n  group_by(mes) %>% \n  mutate(\n    # grados_efectivos = ifelse(tmean>10, tmean-10, 0),\n    suma_termica_mes = cumsum(grados_efectivos)\n  ) %>% \n  ungroup()\n# suma_termica = cumsum(ifelse(date>=\"2018-10-01\", grados_efectivos, 0)))\nbce_met\n#4\n```\n:::\n\n\n## select() \n\nSelecciona columnas basadas en sus nombres\n\n> Descartemos las tmin, tmax y las sumas termicas y reubiquemos las variables de fechas en primer lugar \n\nOpción 1\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-12_02ffc883b8c4dda5dd4479fc531326d7'}\n\n```{.r .cell-code}\nbce_met\nbce_met1 <- bce_met %>% \n  select(fecha, mes, juliano, tmean, rad, helada_meteo, helada_agro, ambiente, -grados_efectivos, -suma_termica, -suma_termica_mes)\nbce_met1\n```\n:::\n\n\nOpción 2\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-13_2430b98e7b697f700660bee1624c1431'}\n\n```{.r .cell-code}\nbce_met1 <- bce_met %>% \n  select(-c(tmin, tmax, grados_efectivos, suma_termica, suma_termica_mes))\nbce_met1\n```\n:::\n\n\nOpción 3\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-14_e446200bef7fd111c2165eea46dc765f'}\n\n```{.r .cell-code}\nbce_met1 <- bce_met %>% \n  select(fecha, mes, juliano, tmedia=tmean, rad, contains(\"helada\"), ambiente) # cuanto mas eficiente estamos siendo\nbce_met1\n```\n:::\n\n\n\n## filter() \n\nFiltra filas en base a condiciones\n\n> Filtrar por: dias tuvieron heladas meteorológicas\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-15_5c1f8a3c090c0cf93b5ccdd87a3b0682'}\n\n```{.r .cell-code}\nbce_met1 %>% \n  filter(helada_meteo==TRUE) \n```\n:::\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-16_deb7d4029645d594971e76b2e669a034'}\n\n```{.r .cell-code}\nbce_met1 %>% \n  filter(tmedia<10)\n```\n:::\n\n\nFiltrar por: condicion multiplicativa\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-17_92de506d5593d8f0a96e16b9a2358f0a'}\n\n```{.r .cell-code}\nbce_met1 %>% \n  filter(tmedia<10 & rad>10)\n```\n:::\n\nFiltrar por: condición aditiva\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-18_d24a91d4b3b32aea7dc5a62c0347a4f9'}\n\n```{.r .cell-code}\nbce_met1 %>% \n  filter(tmedia<10 | rad>10)\n```\n:::\n\nfiltrar por la negativa de la condicion\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-19_173337d566339a78aaa346c9b994db2a'}\n\n```{.r .cell-code}\nbce_met1 %>% \n  filter(!(tmedia<10 | rad>10))\n# 300+65\n```\n:::\n\n\nfiltrar por rango\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-20_de74e1decb393c43c3244bab379f8147'}\n\n```{.r .cell-code}\nbce_met1 %>% \n  filter(between(tmedia,3,6))\n```\n:::\n\n\n## count() \n\nCuenta el numero de observaciones por grupo\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-21_1f25db2c5bddbe891251c30c3e39d56c'}\n\n```{.r .cell-code}\nbce_met1 %>% \n  count(helada_meteo)\n```\n:::\n\n\n- se puede agregar mas niveles de agrupamiento\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-22_89c80e3cf2494408aa9d7b7705a08308'}\n\n```{.r .cell-code}\nbce_met1 %>% \n  count(mes, helada_meteo)\n```\n:::\n\n\n## summarise() \n\nReduce multiples valores a valores resumenes. Generalmente combinado con `group_by()`\n\n> para cada mes: cuantos dias helaron y cual fue la temp media\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-23_48772d7283d21efe2c6cfb264227cb22'}\n\n```{.r .cell-code}\nbce_met1 %>% \n  group_by(mes) %>% \n  summarise(\n    tmedia=mean(tmedia), \n    n_helada_meteo=sum(helada_meteo),\n    n_helada_agro=sum(helada_agro)\n  ) -> bce_sum\nbce_sum\n```\n:::\n\n\n## arrange() \n\nCambia el orden de las filas \n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-24_721f18dc0c4e2bc0e67db8a2fc8b6bb3'}\n\n```{.r .cell-code}\nbce_sum %>%\n  arrange(tmedia)\n```\n:::\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-25_3572ca4e0cd7f78187bd3c8ed2b72075'}\n\n```{.r .cell-code}\nbce_sum %>%\n  arrange(-tmedia)\n```\n:::\n\n\nYa que hicimos tantas modificaciones a los datos es un buen momento para guardar en formato `.Rdata` o `.rda`\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-26_fd286d0f312d0a54bb5f540a69fb8b55'}\n\n```{.r .cell-code}\nsave(bce_met_raw, bce_met1, bce_sum, file=\"data/meteo_bce.Rdata\")\nload(\"data/meteo_bce.Rdata\")\n# save(bce_met_raw, bce_met1, bce_sum, file=\"data/meteo_bce.rda\")\n```\n:::\n\n\nGráfico de Temperaturas media\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-27_0bd7fba713adaae316018e40d596f024'}\n\n```{.r .cell-code}\nbce_met1 %>% \n  ggplot() + \n  aes(x=fecha, y=tmedia)+\n  geom_line() +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\")+\n  theme(axis.text.x = element_text(angle=45, hjust = 1)) + \n  labs(x=\"\", y=\"Temperatura media diaria (ºC)\") + \n  theme(axis.text.x = element_text(angle=45, hjust = 1))\n```\n:::\n\n\n> nos interesa visualizar los meses en que se desarrolla el trigo (de junio a diciembre)\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-28_cf6f93cbc6c47df522d1ec468838ff2e'}\n\n```{.r .cell-code}\nbce_met %>% \n  ggplot() + \n  aes(x=fecha)+\n  \n  geom_line(aes(y = tmean, col = \"Media\"), alpha=.5) +\n  geom_line(aes(y = tmax, col = \"Máxima\"), alpha=.5) +\n  geom_line(aes(y = tmin, col = \"Mínima\"), alpha=.5) +\n  \n  scale_colour_manual(\"Temperatura\",\n                      values = c(\"Media\" = \"black\", \n                                 \"Máxima\" = \"red\", \n                                 \"Mínima\" = \"blue\"))+ \n  theme_bw() + \n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\",\n               limits = as.Date(c(\"2018-06-01\", \"2018-31-12\")))+\n  theme(axis.text.x = element_text(angle=45, hjust = 1))+\n  labs(y=\"°C\")\n```\n:::\n\n\n## join()\n\nNos acaban de pasar los datos de lluvias de Balcarce en 2018\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-29_6731b9f535fbbd8c90bd6d7921ea5607'}\n\n```{.r .cell-code}\nbce_lluvias_raw  <- rio::import(\"data/datos_curso.xls\", sheet =\"bce_lluvias\")\nbce_lluvias_raw\n```\n:::\n\n\nseria interesante poder acoplar a nuestro dataset `bce_met1`\n\nVeamos los datos meteorologicos de Balcarce:\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-30_faade196dd853f0ca4b60da22294685a'}\n\n```{.r .cell-code}\nbce_met1\nbce_lluvias_raw \n```\n:::\n\n\nQué columnas tenemos en comun??\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-31_c0bc3821df03a7ba969f6ec189b32d23'}\n\n```{.r .cell-code}\njanitor::compare_df_cols(bce_met1, bce_lluvias_raw)\n```\n:::\n\nSi hacemos la misma conversion fecha a date tendriamos una columna en comun \n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-32_84b3d1000d3128d051f912a47abf630d'}\n\n```{.r .cell-code}\nbce_lluvias <- bce_lluvias_raw %>% \n  mutate(fecha = dmy(fecha))  \njanitor::compare_df_cols(bce_met1, bce_lluvias)\n```\n:::\n\nAhora hagamos uso de `left_join()` para que matcheen las filas y se peguen la columna de lluvia a bce_met2\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-33_8e59c99b44fcd24be9071db380660b0a'}\n\n```{.r .cell-code}\nbce_full <- bce_met1 %>% left_join(bce_lluvias, by=\"fecha\") \n\nbce_full\n```\n:::\n\n\nUn segundo! los NA´s no son datos perdidos... son mm=0!\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-34_3dfc78ca69012ae475eceef1a4e2c5cf'}\n\n```{.r .cell-code}\nbce_full <- bce_full %>% \n  mutate(pp_mm = replace_na(pp, 0)) #replace_na es de tidyr\nbce_full\n```\n:::\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-35_291e14bf3bca6547edfc95722f36b8a4'}\n\n```{.r .cell-code}\nbce_full %>% \n  ggplot() + \n  aes(x=fecha)+\n  geom_col(aes(y = pp), col=\"blue\") + \n  theme_bw() + \n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\",\n               limits = as.Date(c(\"2018-06-01\", \"2018-31-12\")))+\n  theme(axis.text.x = element_text(angle=45, hjust = 1))+\n  geom_line(aes(y=tmedia), col=\"green\")\n```\n:::\n\n\n## forcats\n\nEl paquete `{forcats}` hace un aporte clave para la manipulación de los niveles de un factor. Retomemos un ejemplo de tipico de visualización con `iris`\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-36_4fbbede43d14fa2187f34f367145b985'}\n\n```{.r .cell-code}\niris %>%\n  ggplot() +\n  aes(x=Species, y=Sepal.Length)+\n  geom_boxplot(fill=\"gray90\")+\n  geom_jitter()+\n  labs(x= \"Species\", y=\"Sepal length (cm)\") + \n  theme_bw()\n```\n:::\n\n\n> Reordenar niveles de un factor\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-37_88ff0e0be7f6d70ae18663746bb9697a'}\n\n```{.r .cell-code}\niris %>% \n  mutate(\n    Species = fct_relevel(Species,\"virginica\")\n    ) %>% \n  ggplot() +\n  aes(x=Species, y=Sepal.Length)+\n  geom_boxplot(fill=\"gray90\")+\n  geom_jitter()+\n  labs(x= \"Species\", y=\"Sepal length (cm)\") + \n  theme_bw()\n```\n:::\n\n\n> Renombrar niveles de un factor\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-38_633c26903ad0f0aa20baee6df6ab6989'}\n\n```{.r .cell-code}\niris %>%\n  mutate(\n    Species= fct_recode(Species,\n                        \"Setosa\"=\"setosa\", \n                        \"Versicolor\"=\"versicolor\", \n                        \"Virginica\"=\"virginica\")\n    ) %>%\n  ggplot() +\n  aes(x=Species, y=Sepal.Length)+\n  geom_boxplot(fill=\"gray90\")+\n  geom_jitter()+\n  labs(x= \"Species\", y=\"Sepal length (cm)\") + \n  theme_bw()\n```\n:::\n\n\n# tidyr\n\nContiene funciones para  re-estructurar dataframes. Similar al conocido \"transponer\" de excel. \n \n(fig/tidyr-pivot_wider_longer.gif)\n\n## pivot_longer()\n\nPor lo general en la etapa de toma de datos en el campo/lab (y su consiguiente pasaje a planilla electrónica, Excel) nos resulta más cómodo que las planillas de papel tengan un formato *wide*.  \n\nEn muchas ocasiones necesitamos (para graficar o modelar) que nuestros datos estén en formato *long*. \n\nLa función `pivot_longer` apila las columnas que indiquemos, re-arregando los datos de un formato \"wide\" a \"long\":\n\nImportemos  **soja**\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-39_ea4ad16846c311c1c599405e17533184'}\n\n```{.r .cell-code}\nsoja  <- rio::import(\"data/datos_curso.xls\", sheet =\"soja\")\nsoja\n```\n:::\n\n\nEn este caso necesitamos generar una columna `bk` y `yield`, o sea, tornar soja de \"wide\" a \"long\": \n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-40_bd9e0fb16ec51c104a58b5d2b526d8ad'}\n\n```{.r .cell-code}\nsoja %>% \n  pivot_longer(\n    cols=c(bk_1, bk_2, bk_3, bk_4), \n    names_to = \"bk\", \n    values_to = \"yield\") -> soja_long \nsoja_long \n```\n:::\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-41_9c1ef7b3e670a9532df1c2cdb4be178e'}\n\n```{.r .cell-code}\nsoja %>% \n  pivot_longer(\n    cols=c(bk_1, bk_2, bk_3, bk_4),\n    # cols=contains(\"_\"),\n    names_to = \"bk\", \n    values_to = \"yield\", \n    names_prefix = \"bk_\") -> soja_long\n\nsoja_long\n```\n:::\n\n\nTambien es comun para medidas repetidas en el tiempo\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-42_a555b30baabb8015c9ed256433f15812'}\n\n```{.r .cell-code}\ncanola  <- rio::import(\"data/datos_curso.xls\", sheet =\"canola\")\ncanola\n```\n:::\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-43_bc3a4c0f681e82dfbc166c45b08facc2'}\n\n```{.r .cell-code}\ncanola %>%  \n  pivot_longer(\n    cols=contains(\"_\"),\n    names_to = \"tt\",\n    values_to = \"inc\", \n    names_prefix = \"inc_\")-> can_long\ncan_long\n```\n:::\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-44_b28e6983a847e64a8a4d4cce40f277f4'}\n\n```{.r .cell-code}\ncan_long %>% \n  mutate_at(\"tt\", as.numeric) %>% \n  ggplot()+\n  aes(x=tt, y=inc, group=1)+\n  geom_line() + \n  geom_point()+\n  facet_grid(bk ~ trt)\n```\n:::\n\n\n## unite()\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-45_32537dbc4ec19e37ff1e72f1e4953864'}\n\n```{.r .cell-code}\ncan_long %>% \n  unite(col=\"par\", bk, trt, sep = \"_\", remove = FALSE) -> can_long2\ncan_long2\n\ncan_long2 %>% \n  mutate_at(\"tt\", as.numeric) %>% \n  ggplot()+\n  aes(x=tt, y=inc, group=1)+\n  geom_line() + \n  facet_wrap(\"par\")\n```\n:::\n\nOtra interesante utilidad de pivot_longer es cuando queremos graficar multiples variables en un mismo grafico pero en diferentes paneles (\"facets\")\n\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-46_438e8346dba3e9b34976de1a47cd1679'}\n\n```{.r .cell-code}\nbce_full %>% \n  ungroup() %>% \n  select(fecha, tmedia, rad) %>% \n  pivot_longer(cols = -fecha, \n               names_to = \"var\", \n               values_to = \"val\") -> bce_full_long \nbce_full_long \n```\n:::\n\n::: {.cell hash='7-manipular_cache/html/unnamed-chunk-47_9427b9e70a70012b8e7a3a7481e510f1'}\n\n```{.r .cell-code}\nbce_full_long %>% \n  ggplot() + \n  aes(x = fecha, y = val, col=var) +  \n  geom_line() + \n  facet_grid(var~., scales = \"free\") + \n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\")+ \n  theme(axis.text.x = element_text(angle=45, hjust = 1))  + \n  labs(x=\"\", y=\"\") + \n  guides(col=\"none\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}